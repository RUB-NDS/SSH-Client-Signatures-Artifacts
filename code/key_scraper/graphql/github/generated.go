// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package github

import (
	"context"
	"encoding/json"
	"fmt"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// GetSshPublicKeysRateLimit includes the requested fields of the GraphQL type RateLimit.
// The GraphQL type's documentation follows.
//
// Represents the client's rate limit.
type GetSshPublicKeysRateLimit struct {
	// The point cost for the current query counting against the rate limit.
	Cost int `json:"cost"`
	// The number of points remaining in the current rate limit window.
	Remaining int `json:"remaining"`
	// The time at which the current rate limit window resets in UTC epoch seconds.
	ResetAt time.Time `json:"resetAt"`
}

// GetCost returns GetSshPublicKeysRateLimit.Cost, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysRateLimit) GetCost() int { return v.Cost }

// GetRemaining returns GetSshPublicKeysRateLimit.Remaining, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysRateLimit) GetRemaining() int { return v.Remaining }

// GetResetAt returns GetSshPublicKeysRateLimit.ResetAt, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysRateLimit) GetResetAt() time.Time { return v.ResetAt }

// GetSshPublicKeysResponse is returned by GetSshPublicKeys on success.
type GetSshPublicKeysResponse struct {
	// The client's rate limit information.
	RateLimit GetSshPublicKeysRateLimit `json:"rateLimit"`
	// Perform a search across resources, returning a maximum of 1,000 results.
	Search GetSshPublicKeysSearchSearchResultItemConnection `json:"search"`
}

// GetRateLimit returns GetSshPublicKeysResponse.RateLimit, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysResponse) GetRateLimit() GetSshPublicKeysRateLimit { return v.RateLimit }

// GetSearch returns GetSshPublicKeysResponse.Search, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysResponse) GetSearch() GetSshPublicKeysSearchSearchResultItemConnection {
	return v.Search
}

// GetSshPublicKeysSearchSearchResultItemConnection includes the requested fields of the GraphQL type SearchResultItemConnection.
// The GraphQL type's documentation follows.
//
// A list of results that matched against a search query. Regardless of the number
// of matches, a maximum of 1,000 results will be available across all types,
// potentially split across many pages.
type GetSshPublicKeysSearchSearchResultItemConnection struct {
	// The total number of users that matched the search query. Regardless of the
	// total number of matches, a maximum of 1,000 results will be available across all types.
	UserCount int `json:"userCount"`
	// Information to aid in pagination.
	PageInfo GetSshPublicKeysSearchSearchResultItemConnectionPageInfo `json:"pageInfo"`
	// A list of nodes.
	Nodes []GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem `json:"-"`
}

// GetUserCount returns GetSshPublicKeysSearchSearchResultItemConnection.UserCount, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnection) GetUserCount() int { return v.UserCount }

// GetPageInfo returns GetSshPublicKeysSearchSearchResultItemConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnection) GetPageInfo() GetSshPublicKeysSearchSearchResultItemConnectionPageInfo {
	return v.PageInfo
}

// GetNodes returns GetSshPublicKeysSearchSearchResultItemConnection.Nodes, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnection) GetNodes() []GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem {
	return v.Nodes
}

func (v *GetSshPublicKeysSearchSearchResultItemConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetSshPublicKeysSearchSearchResultItemConnection
		Nodes []json.RawMessage `json:"nodes"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetSshPublicKeysSearchSearchResultItemConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Nodes
		src := firstPass.Nodes
		*dst = make(
			[]GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			if len(src) != 0 && string(src) != "null" {
				err = __unmarshalGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem(
					src, dst)
				if err != nil {
					return fmt.Errorf(
						"unable to unmarshal GetSshPublicKeysSearchSearchResultItemConnection.Nodes: %w", err)
				}
			}
		}
	}
	return nil
}

type __premarshalGetSshPublicKeysSearchSearchResultItemConnection struct {
	UserCount int `json:"userCount"`

	PageInfo GetSshPublicKeysSearchSearchResultItemConnectionPageInfo `json:"pageInfo"`

	Nodes []json.RawMessage `json:"nodes"`
}

func (v *GetSshPublicKeysSearchSearchResultItemConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetSshPublicKeysSearchSearchResultItemConnection) __premarshalJSON() (*__premarshalGetSshPublicKeysSearchSearchResultItemConnection, error) {
	var retval __premarshalGetSshPublicKeysSearchSearchResultItemConnection

	retval.UserCount = v.UserCount
	retval.PageInfo = v.PageInfo
	{

		dst := &retval.Nodes
		src := v.Nodes
		*dst = make(
			[]json.RawMessage,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			var err error
			*dst, err = __marshalGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem(
				&src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal GetSshPublicKeysSearchSearchResultItemConnection.Nodes: %w", err)
			}
		}
	}
	return &retval, nil
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesApp includes the requested fields of the GraphQL type App.
// The GraphQL type's documentation follows.
//
// A GitHub App.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetSshPublicKeysSearchSearchResultItemConnectionNodesApp.Typename, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesApp) GetTypename() string {
	return v.Typename
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion includes the requested fields of the GraphQL type Discussion.
// The GraphQL type's documentation follows.
//
// A discussion in a repository.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion) GetTypename() string {
	return v.Typename
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue includes the requested fields of the GraphQL type Issue.
// The GraphQL type's documentation follows.
//
// An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue.Typename, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue) GetTypename() string {
	return v.Typename
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing includes the requested fields of the GraphQL type MarketplaceListing.
// The GraphQL type's documentation follows.
//
// A listing in the GitHub integration marketplace.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing.Typename, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing) GetTypename() string {
	return v.Typename
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization.Typename, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization) GetTypename() string {
	return v.Typename
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest includes the requested fields of the GraphQL type PullRequest.
// The GraphQL type's documentation follows.
//
// A repository pull request.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest.Typename, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest) GetTypename() string {
	return v.Typename
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository.Typename, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository) GetTypename() string {
	return v.Typename
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem includes the requested fields of the GraphQL interface SearchResultItem.
//
// GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem is implemented by the following types:
// GetSshPublicKeysSearchSearchResultItemConnectionNodesApp
// GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion
// GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue
// GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing
// GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization
// GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest
// GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository
// GetSshPublicKeysSearchSearchResultItemConnectionNodesUser
// The GraphQL type's documentation follows.
//
// The results of a search.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem interface {
	implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesApp) implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem() {
}
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion) implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem() {
}
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue) implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem() {
}
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing) implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem() {
}
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization) implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem() {
}
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest) implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem() {
}
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository) implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem() {
}
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUser) implementsGraphQLInterfaceGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem() {
}

func __unmarshalGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem(b []byte, v *GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "App":
		*v = new(GetSshPublicKeysSearchSearchResultItemConnectionNodesApp)
		return json.Unmarshal(b, *v)
	case "Discussion":
		*v = new(GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion)
		return json.Unmarshal(b, *v)
	case "Issue":
		*v = new(GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue)
		return json.Unmarshal(b, *v)
	case "MarketplaceListing":
		*v = new(GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization)
		return json.Unmarshal(b, *v)
	case "PullRequest":
		*v = new(GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest)
		return json.Unmarshal(b, *v)
	case "Repository":
		*v = new(GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(GetSshPublicKeysSearchSearchResultItemConnectionNodesUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing SearchResultItem.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem: "%v"`, tn.TypeName)
	}
}

func __marshalGetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem(v *GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetSshPublicKeysSearchSearchResultItemConnectionNodesApp:
		typename = "App"

		result := struct {
			TypeName string `json:"__typename"`
			*GetSshPublicKeysSearchSearchResultItemConnectionNodesApp
		}{typename, v}
		return json.Marshal(result)
	case *GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion:
		typename = "Discussion"

		result := struct {
			TypeName string `json:"__typename"`
			*GetSshPublicKeysSearchSearchResultItemConnectionNodesDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue:
		typename = "Issue"

		result := struct {
			TypeName string `json:"__typename"`
			*GetSshPublicKeysSearchSearchResultItemConnectionNodesIssue
		}{typename, v}
		return json.Marshal(result)
	case *GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing:
		typename = "MarketplaceListing"

		result := struct {
			TypeName string `json:"__typename"`
			*GetSshPublicKeysSearchSearchResultItemConnectionNodesMarketplaceListing
		}{typename, v}
		return json.Marshal(result)
	case *GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*GetSshPublicKeysSearchSearchResultItemConnectionNodesOrganization
		}{typename, v}
		return json.Marshal(result)
	case *GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest:
		typename = "PullRequest"

		result := struct {
			TypeName string `json:"__typename"`
			*GetSshPublicKeysSearchSearchResultItemConnectionNodesPullRequest
		}{typename, v}
		return json.Marshal(result)
	case *GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository:
		typename = "Repository"

		result := struct {
			TypeName string `json:"__typename"`
			*GetSshPublicKeysSearchSearchResultItemConnectionNodesRepository
		}{typename, v}
		return json.Marshal(result)
	case *GetSshPublicKeysSearchSearchResultItemConnectionNodesUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*GetSshPublicKeysSearchSearchResultItemConnectionNodesUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetSshPublicKeysSearchSearchResultItemConnectionNodesSearchResultItem: "%T"`, v)
	}
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesUser struct {
	Typename string `json:"__typename"`
	// Identifies the primary key from the database.
	DatabaseId int `json:"databaseId"`
	// The username used to login.
	Login string `json:"login"`
	// Identifies the date and time when the object was created.
	CreatedAt time.Time `json:"createdAt"`
	// Identifies the date and time when the object was last updated.
	UpdatedAt time.Time `json:"updatedAt"`
	// A list of public keys associated with this user.
	PublicKeys GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnection `json:"publicKeys"`
}

// GetTypename returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUser.Typename, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUser) GetTypename() string {
	return v.Typename
}

// GetDatabaseId returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUser.DatabaseId, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUser) GetDatabaseId() int {
	return v.DatabaseId
}

// GetLogin returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUser.Login, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUser) GetLogin() string { return v.Login }

// GetCreatedAt returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUser.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUser) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUser.UpdatedAt, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUser) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// GetPublicKeys returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUser.PublicKeys, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUser) GetPublicKeys() GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnection {
	return v.PublicKeys
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnection includes the requested fields of the GraphQL type PublicKeyConnection.
// The GraphQL type's documentation follows.
//
// The connection type for PublicKey.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnection struct {
	// Identifies the total count of items in the connection.
	TotalCount int `json:"totalCount"`
	// A list of nodes.
	Nodes []GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnectionNodesPublicKey `json:"nodes"`
}

// GetTotalCount returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnection) GetTotalCount() int {
	return v.TotalCount
}

// GetNodes returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnection.Nodes, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnection) GetNodes() []GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnectionNodesPublicKey {
	return v.Nodes
}

// GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnectionNodesPublicKey includes the requested fields of the GraphQL type PublicKey.
// The GraphQL type's documentation follows.
//
// A user's public key.
type GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnectionNodesPublicKey struct {
	// The public key string.
	Key string `json:"key"`
	// The fingerprint for this PublicKey.
	Fingerprint string `json:"fingerprint"`
}

// GetKey returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnectionNodesPublicKey.Key, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnectionNodesPublicKey) GetKey() string {
	return v.Key
}

// GetFingerprint returns GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnectionNodesPublicKey.Fingerprint, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionNodesUserPublicKeysPublicKeyConnectionNodesPublicKey) GetFingerprint() string {
	return v.Fingerprint
}

// GetSshPublicKeysSearchSearchResultItemConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
// The GraphQL type's documentation follows.
//
// Information about pagination in a connection.
type GetSshPublicKeysSearchSearchResultItemConnectionPageInfo struct {
	// When paginating forwards, the cursor to continue.
	EndCursor string `json:"endCursor"`
	// When paginating forwards, are there more items?
	HasNextPage bool `json:"hasNextPage"`
}

// GetEndCursor returns GetSshPublicKeysSearchSearchResultItemConnectionPageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionPageInfo) GetEndCursor() string {
	return v.EndCursor
}

// GetHasNextPage returns GetSshPublicKeysSearchSearchResultItemConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetSshPublicKeysSearchSearchResultItemConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// __GetSshPublicKeysInput is used internally by genqlient
type __GetSshPublicKeysInput struct {
	Query string `json:"query"`
	After string `json:"after,omitempty"`
}

// GetQuery returns __GetSshPublicKeysInput.Query, and is useful for accessing the field via an interface.
func (v *__GetSshPublicKeysInput) GetQuery() string { return v.Query }

// GetAfter returns __GetSshPublicKeysInput.After, and is useful for accessing the field via an interface.
func (v *__GetSshPublicKeysInput) GetAfter() string { return v.After }

// The query or mutation executed by GetSshPublicKeys.
const GetSshPublicKeys_Operation = `
query GetSshPublicKeys ($query: String!, $after: String) {
	rateLimit {
		cost
		remaining
		resetAt
	}
	search(query: $query, type: USER, first: 100, after: $after) {
		userCount
		pageInfo {
			endCursor
			hasNextPage
		}
		nodes {
			__typename
			... on User {
				databaseId
				login
				createdAt
				updatedAt
				publicKeys(first: 100) {
					totalCount
					nodes {
						key
						fingerprint
					}
				}
			}
		}
	}
}
`

func GetSshPublicKeys(
	ctx_ context.Context,
	client_ graphql.Client,
	query string,
	after string,
) (*GetSshPublicKeysResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetSshPublicKeys",
		Query:  GetSshPublicKeys_Operation,
		Variables: &__GetSshPublicKeysInput{
			Query: query,
			After: after,
		},
	}
	var err_ error

	var data_ GetSshPublicKeysResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
