services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: "root"
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: sshks-es1\n"\
          "    dns:\n"\
          "      - elasticsearch\n"\
          "      - localhost\n"\
          "      - sshks-es1\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "      - 192.168.66.125\n"\
          "  - name: sshks-es2\n"\
          "    dns:\n"\
          "      - elasticsearch\n"\
          "      - localhost\n"\
          "      - sshks-es2\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "      - 192.168.66.5\n"\
          "  - name: sshks-es3\n"\
          "    dns:\n"\
          "      - elasticsearch\n"\
          "      - localhost\n"\
          "      - sshks-es3\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "      - 192.168.66.3\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:<<< password >>>" -H "Content-Type: application/json" https://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"<<< password kibana >>>\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/sshks-es1/sshks-es1.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  elasticsearch:
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
      - 192.168.66.125:9200:9200
      - 192.168.66.125:9300:9300
    hostname: sshks-es1
    extra_hosts:
      - sshks-es2:192.168.66.5
      - sshks-es3:192.168.66.3
    environment:
      - ELASTIC_PASSWORD=<<< password >>>
      - cluster.name=sshks
      - discovery.seed_hosts=sshks-es1,sshks-es2,sshks-es3
      - network.publish_host=192.168.66.125
      - node.roles=data,master,voting_only
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/sshks-es1/sshks-es1.key
      - xpack.security.http.ssl.certificate=certs/sshks-es1/sshks-es1.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/sshks-es1/sshks-es1.key
      - xpack.security.transport.ssl.certificate=certs/sshks-es1/sshks-es1.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - path.repo=/usr/share/elasticsearch/data/backup
    mem_limit: 19327352832
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:8.15.3
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibana-data:/usr/share/kibana/data
    ports:
      - 127.0.0.1:5601:5601
      - 192.168.66.125:5601:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=<<< password kibana >>>
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    mem_limit: 19327352832
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

volumes:
  certs:
  elasticsearch-data:
  kibana-data:
